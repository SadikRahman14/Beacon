@using Microsoft.AspNetCore.Identity
@using Beacon.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Beacon</title>
    <link rel="stylesheet" href="~/css/tailwind.css" asp-append-version="true" />
</head>
<body id="body" class="flex min-h-screen flex-col text-gray-900 transition-colors duration-300">

    <!-- Navbar -->
    <header class="shadow-md">
        <nav class="navbar-fixed mx-auto flex items-center justify-between p-4">
            <!-- Brand Logo/Name (LEFT) -->
            <a asp-area="" asp-controller="Home" asp-action="Index"
               class="text-3xl font-extrabold text-indigo-600 transition hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-200">
                Beacon
            </a>

            <!-- User Profile (RIGHT) -->
            <div class="flex items-center gap-4">
                @if (SignInManager.IsSignedIn(User))
                {
                    var me = await UserManager.GetUserAsync(User);
                    var initial = (me?.FirstName?.Length ?? 0) > 0
                    ? me!.FirstName![0].ToString().ToUpper()
                    : (me?.Email?.FirstOrDefault().ToString().ToUpper() ?? "?");

                    <div class="relative" id="userMenuWrapper">
                        <button type="button" id="userAvatarBtn"
                                class="relative flex items-center justify-center rounded-full ring-1 ring-black/5 focus:outline-none dark:ring-white/10"
                                style="width:32px;height:32px;overflow:hidden;"
                                aria-expanded="false"
                                onclick="(function(btn){
                                    const wrap=btn.closest('#userMenuWrapper');
                                    const menu=wrap.querySelector('.user-menu-dropdown');
                                    const open=menu.hasAttribute('hidden');
                                    if (open) { menu.removeAttribute('hidden'); btn.setAttribute('aria-expanded','true'); }
                                    else { menu.setAttribute('hidden',''); btn.setAttribute('aria-expanded','false'); }
                                })(this)">
                            @if (!string.IsNullOrWhiteSpace(me?.ProfileImageUrl))
                            {
                                <img src="@me.ProfileImageUrl"
                                     alt="@(me?.FirstName ?? me?.Email ?? "User")"
                                     style="width:32px;height:32px;border-radius:9999px;object-fit:cover;display:block;"
                                     loading="lazy" referrerpolicy="no-referrer" />
                            }
                            else
                            {
                                <span class="flex items-center justify-center text-xs font-semibold text-white"
                                      style="width:32px;height:32px;border-radius:9999px;background:linear-gradient(135deg,#6366f1,#7c3aed);">
                                    @initial
                                </span>
                            }
                        </button>

                        <div class="user-menu-dropdown absolute right-0 z-50 mt-2 w-48 rounded-xl border border-gray-200 bg-white p-1 shadow-lg dark:border-gray-700 dark:bg-gray-800"
                             hidden>
                            <div class="truncate px-3 py-2 text-xs text-gray-500 dark:text-gray-400">
                                @(me?.Email)
                            </div>
                            <a asp-controller="Account" asp-action="Profile"
                               class="block rounded-lg px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-200 dark:hover:bg-gray-700">
                                Profile
                            </a>
                            <form asp-controller="Account" asp-action="Logout" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit"
                                        class="block w-full rounded-lg px-3 py-2 text-left text-sm text-red-600 hover:bg-red-50 dark:text-red-400 dark:hover:bg-red-900/20">
                                    Logout
                                </button>
                            </form>
                        </div>
                    </div>
                }
            </div>
        </nav>
    </header>

   
    <style>
        .navbar-fixed {
            background-color: #334155;
            color: #fff;
        }
        .navbar-fixed a {
            color: #fff;
        }

        .navbar-fixed a:hover {
            color: rgba(255,255,255,.8);
        }

        .dark .navbar-fixed {
            background-color: #334155;
        }
    </style>
    <style>
        html, body {
            height: 100%;
            background-color: #111827; /* dark slate */
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        main {
            flex: 1;
        }
    </style>


    <main role="main"
          class="flex-grow bg-gray-400 dark:bg-gray-800"
          style="padding-block: 2.5rem;">
        @* 2.5rem top & bottom *@
        @RenderBody()
    </main>


    <button id="dark-toggle"
            class="fixed bottom-24 right-6 rounded-full bg-red-900 p-2 text-2xl text-white shadow-xl transition-colors duration-300 hover:bg-red-400 dark:bg-red-500 dark:hover:bg-red-500">
        🌙
    </button>

    <!-- Footer -->
    <footer class="footer mt-auto w-full text-gray-300 dark:text-gray-400">
        <div class="footer-inner">
            <p>&copy; @(DateTime.UtcNow.Year) Beacon. All rights reserved.</p>
        </div>
    </footer>

    <style>
        .footer {
            background-color: #111827; /* dark slate */
            padding: 20px 0;
        }

        .footer-inner {
            max-width: 1100px;
            margin: 0 auto;
            padding: 0 20px;
            text-align: center;
            font-size: 14px;
            color: #9ca3af; /* gray-400 */
        }

        .footer a {
            color: #3b82f6; /* blue link */
            text-decoration: none;
        }

            .footer a:hover {
                text-decoration: underline;
            }
    </style>



    @await RenderSectionAsync("Scripts", required: false)

    <script>
        const toggleButton = document.getElementById('dark-toggle');
        const body = document.getElementById('body');

        if(localStorage.getItem('theme') === 'dark') {
            body.classList.add('dark');
            toggleButton.textContent = '☀️';
        }

        toggleButton.addEventListener('click', () => {
            body.classList.toggle('dark');

            if(body.classList.contains('dark')){
                localStorage.theme = 'dark'
                toggleButton.textContent = '☀️';
            }
            else{
                localStorage.theme = 'light'
                toggleButton.textContent = '🌙';
            }
        });
    </script>

    
    <script>
        const avatarBtn = document.getElementById('userAvatarBtn');
        const dropdown = document.getElementById('userDropdown');

        if (avatarBtn && dropdown) {
          avatarBtn.addEventListener('click', (e) => {
            e.stopPropagation(); 
            dropdown.classList.toggle('hidden');
          });

          document.addEventListener('click', (e) => {
            if (!dropdown.classList.contains('hidden') &&
                !dropdown.contains(e.target) &&
                e.target !== avatarBtn) {
              dropdown.classList.add('hidden');
            }
          });

          document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
              dropdown.classList.add('hidden');
            }
          });
        }
    </script>

</body>
</html>
