@model Beacon.Models.User
@{
    ViewData["Title"] = "Profile";

    string Capitalize(string? value)
    {
        if (string.IsNullOrWhiteSpace(value)) return "";
        return char.ToUpper(value[0]) + value.Substring(1).ToLower();
    }

    var firstName = Capitalize(Model.FirstName);
    var lastName = Capitalize(Model.LastName);
    var userName = $"{firstName} {lastName}".Trim();
    if (string.IsNullOrWhiteSpace(userName)) userName = "N/A";

    var userEmail = Model.Email ?? "N/A";
    var userDOB = Model.DateOfBirth.HasValue ? Model.DateOfBirth.Value.ToString("yyyy-MM-dd") : "N/A";
    var userGender = !string.IsNullOrEmpty(Model.Gender) ? Model.Gender : "N/A";
    var userAddress = !string.IsNullOrEmpty(Model.Address) ? Model.Address : "N/A";

    var profileImage = !string.IsNullOrEmpty(Model.ProfileImageUrl) ? Model.ProfileImageUrl : "~/images/profile.jpg";
}

<div class="profile-container">
    <div class="profile-card">
        <div class="profile-left">
            <div class="profile-pic-wrapper">
                <img id="profilePreview" src="@profileImage" alt="Profile" class="profile-pic" />
            </div>

            <div class="file-input-container">
                <label for="profileImageInput" class="file-btn">Choose Image</label>
                <input type="file" id="profileImageInput" accept="image/*" />
            </div>
        </div>

        <div class="profile-right">
            <h2 class="headline">@userName</h2>

            <div class="details">
                <p><strong>Date of Birth</strong> : @userDOB</p>
                <p><strong>Gender</strong> : @userGender</p>
                <p><strong>Address</strong> : @userAddress</p>
                <p><strong>Email</strong> : @userEmail</p>
            </div>

            <div class="btn-group">
                <a href="/Home" class="nav-btn">Home</a>
                <a href="/Posts" class="nav-btn">My Posts</a>
                <a href="/Account/EditProfile" class="nav-btn edit">Edit Profile</a>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script>
        

        // ----- Image upload preview + POST (unchanged) -----
        const input = document.getElementById('profileImageInput');
        const preview = document.getElementById('profilePreview');

        input?.addEventListener('change', function () {
            const file = this.files?.[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function (e) { preview.src = e.target.result; };
            reader.readAsDataURL(file);

            const formData = new FormData();
            formData.append('ProfileImage', file);

            const tokenEl = document.querySelector('input[name="__RequestVerificationToken"]');
            const token = tokenEl ? tokenEl.value : '';

            fetch('@Url.Action("UploadProfileImage", "Account")', {
                method: 'POST',
                body: formData,
                headers: token ? { 'RequestVerificationToken': token } : {}
            })
            .then(res => res.json())
            .then(data => {
                if (!data.success) alert('Upload failed: ' + (data.error || 'Unknown error'));
            })
            .catch(err => console.error(err));
        });
    </script>
}

<style>
    /* ---------- THEME VARIABLES ---------- */
    :root {
        --bg: #fafafa;
        --text: #1f2937; /* gray-800 */
        --muted-text: #374151; /* gray-700 */
        --card: #ffffff;
        --card-muted: #f4f4f4;
        --border: #e5e7eb;
        --brand: #6c63ff;
        --brand-hover: #4a47c6;
        --success: #28a745;
        --success-hover: #1e7e34;
        --shadow: 0 8px 25px rgba(0,0,0,0.12);
    }

    .dark {
        --bg: #0b1220; /* deep navy */
        --text: #e5e7eb; /* gray-200 */
        --muted-text: #cbd5e1; /* slate-300 */
        --card: #0f172a; /* slate-900 */
        --card-muted: #0b1328; /* slightly darker panel */
        --border: #1e293b; /* slate-800 */

        --brand: #8b86ff;
        --brand-hover: #adaaff;
        --success: #34d399; /* emerald-400 */
        --success-hover: #10b981; /* emerald-500 */

        --shadow: 0 12px 28px rgba(0,0,0,0.45);
    }


    html, body {
        height: 100%;
    }

    body {
        min-height: 100vh;

        margin: 0;
        font-family: 'Segoe UI', system-ui, -apple-system, Roboto, sans-serif;
        background: var(--bg);
        color: var(--text);
        transition: background-color .25s ease, color .25s ease;
    }


    

    

    

    /* ---------- LAYOUT ---------- */
    .profile-container {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding: 32px 40px 40px;
    }

    .profile-card {
        background: var(--card);
        display: flex;
        border-radius: 12px;
        box-shadow: var(--shadow);
        max-width: 900px;
        width: 100%;
        overflow: hidden;
        border: 1px solid var(--border);
    }

    .profile-left {
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background: var(--card-muted);
        padding: 40px 20px;
        margin-top: -20px;
        border-right: 1px solid var(--border);
    }

    .profile-pic-wrapper {
        width: 220px;
        height: 220px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: var(--shadow);
        margin-bottom: 15px;
        display: flex;
        justify-content: center;
        align-items: center;
        background: #00000010;
    }

    .profile-pic {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        transition: transform 0.3s ease;
    }

    .file-input-container {
        text-align: center;
        margin-top: 10px;
    }

    #profileImageInput {
        display: none;
    }

    .file-btn {
        background: indigo;
        color: #fff;
        padding: 10px 20px;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 600;
        transition: 0.3s;
        border: 1px solid transparent;
    }

        .file-btn:hover {
            background: pink;
            color: #000;
        }

    /* ---------- RIGHT SIDE ---------- */
    .profile-right {
        flex: 2;
        padding: 30px 40px;
    }

    .headline {
        font-size: 28px;
        font-weight: 700;
        color: var(--brand);
        margin-bottom: 20px;
        letter-spacing: 1px;
    }

    .details p {
        margin: 10px 0;
        color: var(--muted-text);
        font-size: 15px;
    }

    .btn-group {
        margin-top: 50px;
    }

    .nav-btn {
        background: brown;
        color: #fff;
        padding: 10px 18px;
        border-radius: 6px;
        text-decoration: none;
        margin-right: 15px;
        transition: 0.3s;
        border: 1px solid transparent;
    }

    .nav-btn:hover {
            background: pink;
            color: #000;
    }

    .nav-btn.edit {
            background: CadetBlue;
    }

    .nav-btn.edit:hover {
        background: var(--success-hover);
    }

    
 }</style>
