@{
    ViewData["Title"] = "Safety Check";
    var locations = (IEnumerable<dynamic>)ViewBag.Locations;
}

<div class="sc">
    <div class="sc-card">
        <header class="sc-head">
            <div class="sc-head-left">
                <svg width="28" height="28" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true"><path d="M12 2a10 10 0 1 0 0 20A10 10 0 0 0 12 2Zm1 15h-2v-2h2v2Zm0-4h-2V7h2v6Z" /></svg>
                <h1>Safety Check</h1>
            </div>

        </header>

        <div class="sc-title">
            <h2>Check Danger Level</h2>
            <p>Select a location to get the latest safety assessment.</p>
        </div>

        <div class="sc-controls">
            <div class="sc-field">
                <label for="locationSelect">Location</label>
                <select id="locationSelect">
                    <option value="">-- Choose a location --</option>
                    @foreach (var loc in locations)
                    {
                        <option value="@loc.Id">@loc.NameEn</option>
                    }
                </select>
            </div>

            <button id="checkBtn" type="button" class="sc-btn">Check</button>
        </div>

        <hr class="sc-sep" />

        <div id="result" class="sc-result sc-hide">
            <h3>Results</h3>

            <div class="sc-grid">
                <div id="levelBox" class="sc-box">
                    <p class="sc-label">Danger Level</p>
                    <p id="levelText" class="sc-level">—</p>
                </div>

                <div class="sc-box">
                    <p class="sc-label">Danger Score</p>
                    <p class="sc-score">
                        <span id="scoreText">0</span>
                        <span class="sc-score-max">/ 100</span>
                    </p>
                    <div class="sc-progress">
                        <div id="scoreBar" class="sc-progress-bar" style="width:0%"></div>
                    </div>
                    <div id="breakdown" class="sc-breakdown"></div>
                </div>
            </div>

            <div class="sc-expl">
                <p class="sc-expl-title">Explanation</p>
                <p id="explanation" class="sc-expl-text"></p>
            </div>
        </div>

        <div id="errorBox" class="sc-error sc-hide" role="alert"></div>
    </div>
</div>

@section Scripts {
    <script>
        (() => {
          const sel   = document.getElementById('locationSelect');
          const btn   = document.getElementById('checkBtn');
          const box   = document.getElementById('result');
          const err   = document.getElementById('errorBox');

          const levelBox  = document.getElementById('levelBox');
          const levelText = document.getElementById('levelText');
          const scoreText = document.getElementById('scoreText');
          const scoreBar  = document.getElementById('scoreBar');
          const breakdown = document.getElementById('breakdown');
          const explanation = document.getElementById('explanation');

          function setLevelStyle(level){
            levelBox.className = 'sc-box'; // reset
            if(level === 'High'){
              levelBox.classList.add('sc-high');
            } else if(level === 'Medium'){
              levelBox.classList.add('sc-med');
            } else {
              levelBox.classList.add('sc-low');
            }
            levelText.className = 'sc-level sc-' + (level?.toLowerCase() || 'low');
          }

          function pct(score){
            const n = Number(score || 0);
            return Math.max(0, Math.min(100, Math.round(n)));
          }

          async function fetchScore(){
            const id = sel.value;
            err.classList.add('sc-hide'); err.textContent = '';
            if(!id){ box.classList.add('sc-hide'); return; }

            btn.disabled = true;
            try{
              const res = await fetch(`/api/danger/score?locationId=${encodeURIComponent(id)}`);
              if(!res.ok){
                const j = await res.json().catch(()=>({error:'Request failed'}));
                throw new Error(j.error || 'Request failed');
              }
              const data = await res.json();

              levelText.textContent = data.level;
              setLevelStyle(data.level);

              const s = Number(data.score || 0);
              scoreText.textContent = s.toString();
              scoreBar.style.width = pct(s) + '%';

              breakdown.textContent =
                `30-day alerts: ${data?.recent?.alerts ?? 0}; ` +
                `all-time alerts: ${data?.lifetime?.alerts ?? 0}; ` +
                `complaints: ${data?.lifetime?.complaints ?? 0}; ` +
                `mitigations: ${data?.lifetime?.devUpdates ?? 0}.`;

              explanation.textContent = data.explanation || '';

              box.classList.remove('sc-hide');
              box.classList.add('sc-fadein');
            } catch(e){
              err.textContent = e.message || 'Something went wrong';
              err.classList.remove('sc-hide');
              box.classList.add('sc-hide');
            } finally {
              btn.disabled = false;
            }
          }

          btn.addEventListener('click', fetchScore);
          sel.addEventListener('keydown', (e)=>{ if(e.key === 'Enter') fetchScore(); });
        })();
    </script>
}

<style>
    /* ======= Safety Check (no media queries, no keyframes) ======= */
    .sc {
        --primary: #1173d4;
        --text: #e6edf5;
        --muted: #9fb0c3;
        --border: #233142;
        --card: #141e29;
        --panel: #0f1822;
        --success: #34d399;
        --warning: #f59e0b;
        --danger: #f87171;
        display: flex;
        justify-content: center;
        padding: 24px 16px;
        color: var(--text);
    }

    .sc-card {
        width: 100%;
        max-width: 980px;
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 16px;
        box-shadow: 0 10px 30px rgba(2,6,23,.25);
        padding: 24px;
    }

    /* header */
    .sc-head {
        display: flex;
        align-items: center;
        justify-content: space-between;
        gap: 16px;
        margin-bottom: 8px
    }

    .sc-head-left {
        display: flex;
        align-items: center;
        gap: 10px
    }

    .sc-head h1 {
        font-size: 18px;
        margin: 0
    }

    .sc-nav {
        display: flex;
        gap: 14px
    }

        .sc-nav a {
            color: var(--muted);
            text-decoration: none;
            font-weight: 600
        }

            .sc-nav a:hover {
                color: var(--primary)
            }

    /* title */
    .sc-title {
        text-align: center;
        margin: 12px 0 20px
    }

        .sc-title h2 {
            margin: 0 0 6px 0;
            font-size: 24px;
            color: var(--text)
        }

        .sc-title p {
            margin: 0;
            color: var(--muted)
        }

    /* controls (fixed two columns: select + button) */
    .sc-controls {
        display: grid;
        grid-template-columns: 1fr 160px;
        gap: 14px;
        align-items: end;
    }

    .sc-field label {
        display: block;
        font-weight: 700;
        font-size: 14px;
        color: var(--muted);
        margin: 0 0 6px 2px;
    }

    .sc-field select {
        width: 100%;
        height: 48px;
        border-radius: 12px;
        border: 1px solid var(--border);
        background: #0b1320;
        color: var(--text);
        padding: 0 12px;
        font-size: 16px;
        outline: none;
    }

        .sc-field select:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(17,115,212,.18);
        }

    /* button */
    .sc-btn {
        height: 48px;
        border-radius: 12px;
        font-weight: 800;
        letter-spacing: .2px;
        background: var(--primary);
        color: #fff;
        border: 1px solid #0d63b6;
        box-shadow: 0 6px 16px rgba(17,115,212,.25);
        cursor: pointer;
    }

        .sc-btn:hover {
            background: #0f68c3;
        }

    /* divider */
    .sc-sep {
        border: 0;
        border-top: 1px solid var(--border);
        margin: 20px 0;
    }

    /* messages/containers */
    .sc-result.sc-hide {
        display: none;
    }

    .sc-error.sc-hide {
        display: none;
    }

    /* result section */
    .sc-result h3 {
        margin: 0 0 10px 0;
        font-size: 12px;
        text-transform: uppercase;
        color: var(--muted);
        letter-spacing: .12em;
    }

    .sc-grid {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 14px;
        margin-bottom: 12px;
    }

    .sc-box {
        border: 1px solid var(--border);
        border-radius: 14px;
        background: var(--panel);
        padding: 14px;
    }

    .sc-label {
        margin: 0 0 6px 0;
        font-weight: 700;
        color: var(--muted);
    }

    .sc-level {
        margin: 0;
        font-weight: 900;
        font-size: 32px;
        letter-spacing: .3px;
    }

        .sc-level.sc-low {
            color: var(--success);
        }

        .sc-level.sc-med {
            color: var(--warning);
        }

        .sc-level.sc-high {
            color: var(--danger);
        }

    .sc-box.sc-low {
        background: #0f2018;
        border-color: #1d3a2e;
    }

    .sc-box.sc-med {
        background: #1f1a0d;
        border-color: #3d2e10;
    }

    .sc-box.sc-high {
        background: #261316;
        border-color: #472328;
    }

    .sc-score {
        margin: 2px 0 8px 0;
        font-size: 36px;
        font-weight: 900;
        color: var(--text);
    }

    .sc-score-max {
        font-size: 14px;
        font-weight: 600;
        color: var(--muted);
        margin-left: 6px;
    }

    /* progress */
    .sc-progress {
        height: 10px;
        background: #1c2836;
        border-radius: 999px;
        overflow: hidden;
        box-shadow: inset 0 1px 2px rgba(0,0,0,.25);
    }

    .sc-progress-bar {
        height: 100%;
        width: 0%;
        background: linear-gradient(90deg,#4fb5ff,#1173d4);
    }

    /* breakdown + explanation */
    .sc-breakdown {
        margin-top: 8px;
        color: var(--muted);
        font-size: 13px;
    }

    .sc-expl {
        background: var(--panel);
        border: 1px solid var(--border);
        border-radius: 14px;
        padding: 12px 14px;
    }

    .sc-expl-title {
        margin: 0 0 4px 0;
        font-weight: 800;
        color: var(--text);
    }

    .sc-expl-text {
        margin: 0;
        color: var(--muted);
    }

    /* error */
    .sc-error {
        margin-top: 12px;
        padding: 10px 12px;
        border-radius: 12px;
        background: #2a1212;
        color: #f5b5b5;
        border: 1px solid #703b3b;
    }
</style>

