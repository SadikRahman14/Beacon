@using Microsoft.AspNetCore.Identity
@using Beacon.Models
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Beacon</title>
    <link rel="stylesheet" href="~/css/tailwind.css" asp-append-version="true" />
</head>
<body id="body" class="flex min-h-screen flex-col text-gray-900 transition-colors duration-300 dark:text-gray-100">

    <!-- Navbar -->
    <header class="bg-white shadow-md dark:bg-gray-800">
        <nav class="mx-auto flex items-center justify-between p-4">
            <!-- Logo -->
            <a asp-area="" asp-controller="Home" asp-action="Index"
               class="text-3xl font-extrabold text-indigo-600 transition hover:text-indigo-800 dark:text-indigo-400 dark:hover:text-indigo-200">
                Beacon
            </a> 

            <!-- Right-side user menu -->
            <div class="flex items-center gap-4">
                @if (SignInManager.IsSignedIn(User))
                {
                    var me = await UserManager.GetUserAsync(User);
                    var initial = (me?.FirstName?.Length ?? 0) > 0
                        ? me!.FirstName![0].ToString().ToUpper()
                        : (me?.Email ?? "?");

                    <details class="relative z-50" data-menu tabindex="0">
                        <!-- Dropdown -->
                        <div class="absolute right-0 mt-2 w-48 origin-top-right rounded-xl border border-gray-200 bg-white p-1 shadow-lg
                            dark:border-gray-700 dark:bg-gray-800">
                            <a asp-controller="Account" asp-action="Profile"
                               class="block rounded-lg px-3 py-2 text-sm text-gray-700 hover:bg-gray-100
                               dark:text-gray-200 dark:hover:bg-gray-700">
                                Profile
                            </a>
                            <form asp-controller="Account" asp-action="Logout" method="post">
                                @Html.AntiForgeryToken()
                                <button type="submit"
                                        class="block w-full rounded-lg px-3 py-2 text-left text-sm text-red-600 hover:bg-red-50
                                        dark:text-red-400 dark:hover:bg-red-900/20">
                                    Logout
                                </button>
                            </form>
                        </div>
                    </details>
                }
                else
                {
                    <a asp-controller="Account" asp-action="Login"
                       class="rounded-xl bg-indigo-600 px-4 py-2 text-sm font-medium text-white hover:bg-indigo-700">
                        Sign in
                    </a>
                }
            </div>
        </nav>
    </header>

    <!-- Main Content -->
    <main role="main" class="flex-grow">
        @RenderBody()
    </main>

    <!-- Dark Mode Toggle -->
    <button id="dark-toggle"
            class="fixed bottom-24 right-6 rounded-full bg-red-900 p-2 text-2xl text-white shadow-xl transition-colors duration-300 hover:bg-red-400 dark:bg-red-500 dark:hover:bg-red-500">
        🌙
    </button>

    <!-- Footer -->
    <footer class="mt-auto w-full bg-gray-800 py-8 text-gray-300 dark:bg-gray-900 dark:text-gray-400">
        <div class="container mx-auto flex flex-col items-center justify-between gap-2 md:flex-row">
            <p class="text-sm">&copy; 2025 - <span class="font-semibold text-white dark:text-gray-100">Beacon</span></p>
            <a asp-area="" asp-controller="Home" asp-action="Privacy"
               class="text-sm font-medium transition hover:text-white dark:hover:text-gray-200">
                Privacy
            </a>
        </div>
    </footer>

    @await RenderSectionAsync("Scripts", required: false)

    <script>
        const toggleButton = document.getElementById('dark-toggle');
        const body = document.getElementById('body');

        if(localStorage.getItem('theme') === 'dark') {
            body.classList.add('dark');
            toggleButton.textContent = '☀️';
        }

        toggleButton.addEventListener('click', () => {
            body.classList.toggle('dark');

            if(body.classList.contains('dark')){
                localStorage.theme = 'dark'
                toggleButton.textContent = '☀️';
            }
            else{
                localStorage.theme = 'light'
                toggleButton.textContent = '🌙';
            }
        });
    </script>

    <script>
        document.addEventListener('click', (e) => {
            document.querySelectorAll('details[data-menu]').forEach(d => {
                if (!d.contains(e.target)) d.removeAttribute('open');
            });
        });
    </script>

</body>
</html>
