@model Beacon.ViewModels.HomeIndexViewModel
@using Microsoft.AspNetCore.Identity
@using Beacon.Models
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Home";
}

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - City Problems</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .card:hover {
            transform: translateY(-2px);
        }

        .btn-gradient {
            background-image: linear-gradient(90deg,#2563eb,#7c3aed);
        }

        .impact-pill {
            box-shadow: 0 6px 16px rgba(0,0,0,.15);
        }

        .shadow-soft {
            box-shadow: 0 10px 30px rgba(0,0,0,.20);
        }

        .modal-open {
            overflow: hidden;
        }
        /* dark cards for fetched sections */

    </style>
</head>
<body class="bg-slate-900 text-slate-100">

    <!-- HERO (same image, darker overlay) -->
    <div class="relative bg-cover bg-center min-h-[70vh]" style="background-image:url('https://images.unsplash.com/photo-1504384308090-c894fdcc538d?auto=format&fit=crop&w=1800&q=80');">
        <div class="absolute inset-0 bg-slate-900/70"></div>

        <div class="relative z-10 flex flex-col items-center text-center px-6 py-16">
            <!-- badge -->
            <div class="bg-white/10 backdrop-blur rounded-full px-4 py-2 text-sm flex items-center gap-2 mb-6 shadow-soft">
                <span class="text-blue-400">👥</span>
                <span class="text-slate-100/90 font-medium">Join 50,000+ Citizens Making a Difference</span>
            </div>

            <!-- heading -->
            <h1 class="text-4xl md:text-6xl font-extrabold text-white leading-tight">
                Report City Problems, <span class="text-transparent bg-clip-text" style="background-image:linear-gradient(90deg,#60a5fa,#a78bfa)">See Real Solutions</span>
            </h1>

            <!-- sub -->
            <p class="text-slate-200/80 max-w-3xl mt-5">
                Beacon connects citizens with city officials to solve infrastructure problems, safety concerns,
                and community issues efficiently and transparently.
            </p>

            <!-- actions -->
            <div class="flex gap-4 mt-10">
                <a asp-controller="Complain" asp-action="CreateComplain"
                   class="px-6 py-3 rounded-xl text-white font-semibold btn-gradient shadow-soft hover:opacity-95">
                    + Post a Complaint
                </a>

                <a href="#recent" class="px-6 py-3 rounded-xl border border-slate-600 font-semibold text-slate-100 bg-slate-800 shadow-soft hover:bg-slate-700">
                    See What’s New
                </a>
            </div>

            <!-- stats -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 w-full max-w-5xl mt-14">
                
            </div>
        </div>
    </div>

    <!-- RECENT (dynamic) -->
    <section id="recent" class="py-12">
        <div class="max-w-7xl mx-auto px-6">
            <!-- Latest Alerts -->
            <div class="mb-12">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-extrabold text-slate-100">Latest Alerts</h2>
                    <a asp-controller="AlertPosts" asp-action="Index" class="text-blue-400 hover:underline">View all</a>
                </div>

                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    @foreach (var a in Model.Alerts)
                    {
                        var display = a.AdminDisplayName ?? "Administrator";
                        if (display.Contains("@")) display = display.Split('@')[0];
                        var initials = new string(display.Split(' ', StringSplitOptions.RemoveEmptyEntries)
                        .Select(s => char.ToUpperInvariant(s[0])).Take(2).ToArray());

                        <article class="dark-card overflow-hidden">
                            @if (!string.IsNullOrWhiteSpace(a.ImageUrl))
                            {
                                <img src="@a.ImageUrl" alt="Alert image" class="w-full h-40 object-cover" />
                            }
                            <div class="p-4">
                                <div class="flex flex-wrap items-center gap-2 mb-2">
                                    <span class="chip bg-blue-900/50 text-blue-200">@a.Type</span>
                                    @if (!string.IsNullOrWhiteSpace(a.Location))
                                    {
                                        <span class="chip bg-purple-900/50 text-purple-200">@a.Location</span>
                                    }
                                </div>

                                <h3 class="text-sm font-bold text-white">@a.Content</h3>
                                <p class="text-slate-300 text-sm mt-1 line-clamp-2">@a.Content</p>

                                <div class="mt-3 flex items-center gap-3 text-slate-300 text-xs">
                                    @if (!string.IsNullOrWhiteSpace(a.AdminAvatarUrl))
                                    {
                                        <img src="@a.AdminAvatarUrl" alt="@display" class="h-7 w-7 rounded-full object-cover border border-slate-600" />
                                    }
                                    else
                                    {
                                        <div class="h-7 w-7 rounded-full bg-indigo-200 text-indigo-900 grid place-items-center font-bold">@initials</div>
                                    }
                                    <span>@display</span>
                                    <span class="ml-auto">@a.CreatedAt.ToLocalTime().ToString("dd MMM yyyy, h:mm tt")</span>
                                </div>

                                <a asp-controller="AlertPosts" asp-action="Details" asp-route-id="@a.Id"
                                   class="inline-block mt-3 text-blue-400 text-sm hover:underline">Read more</a>
                            </div>
                        </article>
                    }

                    @if (!Model.Alerts.Any())
                    {
                        <div class="dark-card p-6">
                            <p class="text-slate-300">No alerts yet.</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Dev Updates -->
            <div>
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-extrabold text-slate-100">Dev Updates</h2>
                    <a asp-controller="DevUpdates" asp-action="Index" class="text-blue-400 hover:underline">View all</a>
                </div>

                <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                    @foreach (var u in Model.Updates)
                    {
                        var display = u.AdminDisplayName ?? "Administrator";
                        if (display.Contains("@")) display = display.Split('@')[0];
                        var initials = new string(display.Split(' ', StringSplitOptions.RemoveEmptyEntries)
                        .Select(s => char.ToUpperInvariant(s[0])).Take(2).ToArray());

                        <article class="dark-card overflow-hidden">
                            @if (!string.IsNullOrWhiteSpace(u.ImageUrl))
                            {
                                <img src="@u.ImageUrl" alt="Update image" class="w-full h-40 object-cover" />
                            }
                            <div class="p-4">
                                <div class="flex flex-wrap items-center gap-2 mb-2">
                                    <span class="chip bg-blue-900/50 text-blue-200">@u.Type</span>
                                    @if (!string.IsNullOrWhiteSpace(u.Location))
                                    {
                                        <span class="chip bg-purple-900/50 text-purple-200">@u.Location</span>
                                    }
                                </div>

                                <h3 class="text-sm font-bold text-white">@u.Content</h3>
                                <p class="text-slate-300 text-sm mt-1 line-clamp-2">@u.Content</p>

                                <div class="mt-3 flex items-center gap-3 text-slate-300 text-xs">
                                    @if (!string.IsNullOrWhiteSpace(u.AdminAvatarUrl))
                                    {
                                        <img src="@u.AdminAvatarUrl" alt="@display" class="h-7 w-7 rounded-full object-cover border border-slate-600" />
                                    }
                                    else
                                    {
                                        <div class="h-7 w-7 rounded-full bg-indigo-200 text-indigo-900 grid place-items-center font-bold">@initials</div>
                                    }
                                    <span>@display</span>
                                    <span class="ml-auto">@u.CreatedAt.ToLocalTime().ToString("dd MMM yyyy, h:mm tt")</span>
                                </div>

                                <a asp-controller="DevUpdates" asp-action="Details" asp-route-id="@u.Id"
                                   class="inline-block mt-3 text-blue-400 text-sm hover:underline">Read more</a>
                            </div>
                        </article>
                    }

                    @if (!Model.Updates.Any())
                    {
                        <div class="dark-card p-6">
                            <p class="text-slate-300">No updates yet.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>

    <!-- SUCCESS STORIES (kept, but dark) -->
    

    <!-- MODALS (unchanged JS, just work with dark UI) -->
    <div id="modal-1" class="fixed inset-0 hidden items-center justify-center z-50">
        <div class="absolute inset-0 bg-black/60" data-close-modal="modal-1"></div>
        <div class="relative bg-slate-900 text-slate-100 rounded-2xl w-11/12 max-w-2xl p-6 shadow-soft border border-slate-700">
            <button class="absolute top-3 right-3 text-slate-400 hover:text-slate-200" data-close-modal="modal-1">&times;</button>
            <h3 class="text-2xl font-bold">Dangerous Pothole Fixed on Main Street</h3>
            <p class="text-slate-300 mt-2">
                The pothole was reported via the Beacon app. Maintenance crew inspected and patched within 48 hours.
            </p>
            <div class="grid grid-cols-2 gap-3 mt-4">
                <img class="rounded-lg object-cover h-40 w-full" src="https://images.unsplash.com/photo-1603436325181-ec6e6a8d3f41?auto=format&fit=crop&w=800&q=80" alt="">
                <img class="rounded-lg object-cover h-40 w-full" src="https://images.unsplash.com/photo-1533659572422-02293328c6e1?auto=format&fit=crop&w=800&q=80" alt="">
            </div>
            <div class="mt-5 flex justify-end">
                <button class="px-5 py-2 rounded-lg bg-slate-800 hover:bg-slate-700 border border-slate-700" data-close-modal="modal-1">Close</button>
            </div>
        </div>
    </div>

    <div id="modal-2" class="fixed inset-0 hidden items-center justify-center z-50">
        <div class="absolute inset-0 bg-black/60" data-close-modal="modal-2"></div>
        <div class="relative bg-slate-900 text-slate-100 rounded-2xl w-11/12 max-w-2xl p-6 shadow-soft border border-slate-700">
            <button class="absolute top-3 right-3 text-slate-400 hover:text-slate-200" data-close-modal="modal-2">&times;</button>
            <h3 class="text-2xl font-bold">Broken Streetlight Restored</h3>
            <p class="text-slate-300 mt-2">Ballast replaced and lamp rewired by utilities team at 6:30 PM.</p>
            <div class="grid grid-cols-2 gap-3 mt-4">
                <img class="rounded-lg object-cover h-40 w-full" src="https://images.unsplash.com/photo-1519681393784-d120267933ba?auto=format&fit=crop&w=800&q=80" alt="">
                <img class="rounded-lg object-cover h-40 w-full" src="https://images.unsplash.com/photo-1472772912948-36c6ef7ab7b8?auto=format&fit=crop&w=800&q=80" alt="">
            </div>
            <div class="mt-5 flex justify-end">
                <button class="px-5 py-2 rounded-lg bg-slate-800 hover:bg-slate-700 border border-slate-700" data-close-modal="modal-2">Close</button>
            </div>
        </div>
    </div>

    <div id="modal-3" class="fixed inset-0 hidden items-center justify-center z-50">
        <div class="absolute inset-0 bg-black/60" data-close-modal="modal-3"></div>
        <div class="relative bg-slate-900 text-slate-100 rounded-2xl w-11/12 max-w-2xl p-6 shadow-soft border border-slate-700">
            <button class="absolute top-3 right-3 text-slate-400 hover:text-slate-200" data-close-modal="modal-3">&times;</button>
            <h3 class="text-2xl font-bold">Storm Drain Cleared After Flooding</h3>
            <p class="text-slate-300 mt-2">Debris removed, sump cleared and grates re-seated. Follow-up scheduled.</p>
            <div class="grid grid-cols-2 gap-3 mt-4">
                <img class="rounded-lg object-cover h-40 w-full" src="https://images.unsplash.com/photo-1549480017-d76466a4b7b7?auto=format&fit=crop&w=800&q=80" alt="">
                <img class="rounded-lg object-cover h-40 w-full" src="https://images.unsplash.com/photo-1501594907352-04cda38ebc29?auto=format&fit=crop&w=800&q=80" alt="">
            </div>
            <div class="mt-5 flex justify-end">
                <button class="px-5 py-2 rounded-lg bg-slate-800 hover:bg-slate-700 border border-slate-700" data-close-modal="modal-3">Close</button>
            </div>
        </div>
    </div>

    <!-- JS: modal wiring (unchanged) -->
    <script>
        document.querySelectorAll('[data-open-modal]').forEach(btn => {
            btn.addEventListener('click', () => {
                const id = btn.getAttribute('data-open-modal');
                const m = document.getElementById(id);
                if (!m) return;
                m.classList.remove('hidden');
                m.classList.add('flex');
                document.documentElement.classList.add('modal-open');
            });
        });
        document.querySelectorAll('[data-close-modal]').forEach(el => {
            el.addEventListener('click', () => {
                const id = el.getAttribute('data-close-modal');
                const m = document.getElementById(id);
                if (!m) return;
                m.classList.add('hidden');
                m.classList.remove('flex');
                document.documentElement.classList.remove('modal-open');
            });
        });
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                document.querySelectorAll('[id^="modal-"]').forEach(m => {
                    m.classList.add('hidden'); m.classList.remove('flex');
                });
                document.documentElement.classList.remove('modal-open');
            }
        });
    </script>
</body>
</html>
